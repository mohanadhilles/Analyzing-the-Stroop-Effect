{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Analyzing the Stroop Effect\n",
    "Perform the analysis in the space below. Remember to follow [the instructions](https://docs.google.com/document/d/1-OkpZLjG_kX9J6LIQ5IltsqMzVWjh36QpnP2RYpVdPU/pub?embedded=True) and review the [project rubric](https://review.udacity.com/#!/rubrics/71/view) before submitting. Once you've completed the analysis and write-up, download this file as a PDF or HTML file, upload that PDF/HTML into the workspace here (click on the orange Jupyter icon in the upper left then Upload), then use the Submit Project button at the bottom of this page. This will create a zip file containing both this .ipynb doc and the PDF/HTML doc that will be submitted for your project.\n",
    "\n",
    "\n",
    "#### (1) What is the independent variable? What is the dependent variable?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The independent variable in this experiment is whether the word name and font color were the same or different."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (2) What is an appropriate set of hypotheses for this task and What kind of statistical test do you expect to perform?\n",
    "\n",
    "Specify your null and alternative hypotheses, and clearly define any notation used. Justify your choices, \n",
    "Null Hypothsis, H0 - The mismatch of color to word will have no effect or decrease time to recognize and say the color\n",
    "Alternate Hypothesis, H1 - The mismatch of color to word will increase time to recognize and say the color\n",
    "H0: μi ≤ μc (μi - population mean of incongruent values, μc - population mean of congruent values)\n",
    "H1: μi > μc (μi - population mean of incongruent values, μc - population mean of congruent values)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The dependent variable is the reaction time (RT) of the participant to name the font color of the word.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### (3) Report some descriptive statistics regarding this dataset. Include at least one measure of central tendency and at least one measure of variability. The name of the data file is 'stroopdata.csv'."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- sample size = 24\n",
    "- mean: $xbar = \\Sigma{x}/n$ (where xbar is the sample mean, x is the value and n is the number of samples)\n",
    "- Congruent: 14.05, Incogruent: 22.02\n",
    "- median: as the data seems slightly positively skewed, median is a better representation of central tendency\n",
    "- Congruent: 14.3565, Incongruent: 21.0175\n",
    "- sample std. deviation: $\\sigma = \\Sigma{(x - xbar)^2}/n$\n",
    "- Congruent: 3.56, Incongruent: 4.80"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 24 entries, 0 to 23\n",
      "Data columns (total 2 columns):\n",
      "Congruent      24 non-null float64\n",
      "Incongruent    24 non-null float64\n",
      "dtypes: float64(2)\n",
      "memory usage: 464.0 bytes\n"
     ]
    }
   ],
   "source": [
    "# Perform the analysis here\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy import stats\n",
    "%matplotlib inline\n",
    "data = pd.read_csv('stroopdata.csv')\n",
    "data.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Stroop Data Descriptive\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Congruent</th>\n",
       "      <th>Incongruent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>24.000000</td>\n",
       "      <td>24.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>14.051125</td>\n",
       "      <td>22.015917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.559358</td>\n",
       "      <td>4.797057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>8.630000</td>\n",
       "      <td>15.687000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>11.895250</td>\n",
       "      <td>18.716750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>14.356500</td>\n",
       "      <td>21.017500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>16.200750</td>\n",
       "      <td>24.051500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>22.328000</td>\n",
       "      <td>35.255000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Congruent  Incongruent\n",
       "count  24.000000    24.000000\n",
       "mean   14.051125    22.015917\n",
       "std     3.559358     4.797057\n",
       "min     8.630000    15.687000\n",
       "25%    11.895250    18.716750\n",
       "50%    14.356500    21.017500\n",
       "75%    16.200750    24.051500\n",
       "max    22.328000    35.255000"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#import data set\n",
    "print(\"\\n\")\n",
    "print(\"Stroop Data Descriptive\")\n",
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Stroop Data Descriptive Statistics\n",
      "\n",
      "\n",
      "       Congruent  Incongruent  Difference\n",
      "count  24.000000    24.000000   24.000000\n",
      "mean   14.051125    22.015917   -7.964792\n",
      "std     3.559358     4.797057    4.864827\n",
      "min     8.630000    15.687000  -21.919000\n",
      "25%    11.895250    18.716750  -10.258500\n",
      "50%    14.356500    21.017500   -7.666500\n",
      "75%    16.200750    24.051500   -3.645500\n",
      "max    22.328000    35.255000   -1.950000\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "congruent_data = data[\"Congruent\"]\n",
    "incongruent_data = data[\"Incongruent\"]\n",
    "\n",
    "# Create a Series for the difference between the conditions\n",
    "data[\"Difference\"] = data[\"Congruent\"] - data[\"Incongruent\"]\n",
    "\n",
    "print(\"\\n\")\n",
    "print (\"Stroop Data Descriptive Statistics\")\n",
    "print(\"\\n\")\n",
    "print (data.describe())\n",
    "print(\"\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "t-value = 8.02\n",
      "p-value = 0.00000004\n"
     ]
    }
   ],
   "source": [
    "# Calculations for a sample t-value[7] \n",
    "tvalueResults = stats.ttest_rel(incongruent_data, congruent_data)\n",
    "tstat = tvalueResults[0]\n",
    "pvalue = tvalueResults[1]\n",
    "print (\"t-value = \" + '%.2f' % tstat) \n",
    "print (\"p-value = \" + '%.8f' % pvalue)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "write anThe mean average in the summary table to the sample mean, which is different than the hypothetical average μ.swer here"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(4) Provide one or two visualizations that show the distribution of the sample data. Write one or two sentences noting what you observe about the plot or plots."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Frequency')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fbeb1adaa90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set_style('whitegrid')\n",
    "g = sns.distplot(data['Congruent'],rug=True,color=\"#160177\",bins=10,kde=False)\n",
    "g.axes.set_title('Histogram of Congruent Sample Data', fontsize=13)\n",
    "plt.xlabel(\"Congruent Reaction Time (seconds)\")\n",
    "plt.ylabel(\"Frequency\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " most participants completed the test in ~15 seconds."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Frequency')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fbeafabc438>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set_style('whitegrid')\n",
    "g = sns.distplot(data['Incongruent'],rug=True,color=\"#160177\",bins=10,kde=False)\n",
    "g.axes.set_title('Histogram of Incongruent Sample Data', fontsize=13)\n",
    "plt.xlabel(\"Incongruent Reaction Time (seconds)\")\n",
    "plt.ylabel(\"Frequency\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " the majority of participants completed the test between 17.5-21 seconds with some outliers completing the test in ~35 seconds."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fbeaf9466a0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = pd.read_csv('stroopdata.csv')\n",
    "title = 'Histogram of Both Conditions'\n",
    "g = df.plot(title=title, kind='hist', alpha= 0.5, bins=10,stacked=True)\n",
    "plt.xlabel('Reaction Time (seconds)')\n",
    "size = plt.axis([0,40,0,12])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " From the visualization, it appears to take the participants ~5 seconds longer to complete the incongruent test."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Stroop Dataset: Reaction Time Difference')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fbeaf8f5eb8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(data['Difference'],rug=True,color=\"#16677c\",kde=False)\n",
    "plt.xlabel(\"Difference in Reaction Time (seconds)\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.title(\"Stroop Dataset: Reaction Time Difference\",fontsize=13)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Visualization of the reaction time difference between the two conditions.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(5)  Now, perform the statistical test and report your results. What is your confidence level or Type I error associated with your test? What is your conclusion regarding the hypotheses you set up? Did the results match up with your expectations? **Hint:**  Think about what is being measured on each individual, and what statistic best captures how an individual reacts in each environment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Degrees of Freedom : df = 23\n",
      "Alpha- level : a = 0.005\n",
      "t-critical values :  tc  = 2.80733568377 -2.80733568377\n",
      "t-Statistic(df) : t(23) = -8.02070694411\n",
      "p-value : p = 4.10300058571e-08\n"
     ]
    }
   ],
   "source": [
    "mean_congurent = data['Congruent'].mean()\n",
    "mean_incongurant = data['Incongruent'].mean()\n",
    "estimate_point = mean_congurent - mean_incongurant\n",
    "ssd = sum( ( (data['Congruent'] - data['Incongruent']) - estimate_point ) ** 2  )\n",
    "vd = ssd / (24 -1)\n",
    "sdd = vd ** (1/2)\n",
    "tstatistic = estimate_point / ( sdd / ( 24 ** (1/2) ) )\n",
    "df = 23\n",
    "pvalue = stats.t.cdf(x = tstatistic, df = 23 ) * 2 \n",
    "alpha = 0.005\n",
    "tcritical = stats.t.ppf(q=alpha, df=23)\n",
    "\n",
    "\n",
    "# \n",
    "print(\"Degrees of Freedom : df =\", df)\n",
    "print(\"Alpha- level : a =\", alpha)\n",
    "print(\"t-critical values :  tc  =\", -tcritical, tcritical)\n",
    "print(\"t-Statistic(df) : t(23) =\", tstatistic)\n",
    "print(\"p-value : p =\", pvalue)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " What are the confidence level and your critical statistic value? Do you reject the null hypothesis or fail to reject it? Come to a conclusion in terms of the experiment task. Did the results match up with your expectations?\n",
    "\n",
    "Confidence Interval = 95%\n",
    "\n",
    "α = .05\n",
    "\n",
    "degrees of freedom = 23\n",
    "\n",
    "one-tailed critical statistic value = 1.714\n",
    "\n",
    "calculated t-value = 8.02\n",
    "\n",
    "p-value = 0.00000004\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> ## Result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    ">> ### If the calculated t-statistic is greater than the critical t-value, the test concludes that there is a statistically significant difference between the two populations. Therefore, you reject the null hypothesis that there is no statistically significant difference between the two populations."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(6) Optional: What do you think is responsible for the effects observed? Can you think of an alternative or similar task that would result in a similar effect? Some research about the problem will be helpful for thinking about these two questions!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> Their many theories that may explain the Stroop effect:\n",
    "The speed of Processing Theory: the interference occurs because the brain reads faster than it recognizes colors.\n",
    "Selective Attention Theory: interference occurs because recognizing colors requires more attention than reading words.\n",
    "Alternative tasks to try:\n",
    "Use emotional words such as \"sad\", \"happy\", \"depressed\" or \"angry\" mixed with neutral words such as \"pen\", \"door\" or \"jeans\", the words are colored and the participant is supposed to name the color. Research has revealed that individuals that are depressed are more likely to say the color of a negative word slower than the color of a neutral word"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
